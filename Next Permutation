import java.util.* ;
import java.io.*; 
import java.util.ArrayList;
import java.util.Collections;

public class Solution 
{
	public static ArrayList<Integer> reverse(int si,int ei,ArrayList<Integer>A)
	{
		int i =si;
		int j =ei;
		while(i<j)
		{
			swap(i,j,A);
			i++;
			j--;
			
		}
		return A;
	}
	public static void swap(int si,int ei,ArrayList<Integer> A)
	{
		int temp = A.get(si);
		A.set(si,A.get(ei));
		A.set(ei,temp);
	}
	public static ArrayList<Integer> nextPermutation(ArrayList<Integer> permutation) 
	{
		int n = permutation.size();
		int  k = n-2;
		int i =n-1;
		if(n==0||permutation==null)return permutation
		;
		for( i=n-1;i>0;i--)
		{
			if(permutation.get(i)<=permutation.get(i-1))k--;
			else {break;}
		}
		
		if(k==-1)
		{
			reverse(k+1,n-1,permutation);
			return permutation;
	}
		for(int j =n-1;j>0;j--)
		{
			if(permutation.get(j)>permutation.get(k))
			{
				swap(j,k,permutation);
				break;
				
			}
		}
		
		return reverse(k+1,n-1,permutation); 

		

	}
}
